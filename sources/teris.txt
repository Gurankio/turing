(0, ^-, 0, ^-, >)
(0, -, 1, *, <)
(1, ^@, 1, ^@, <)
(1, @, r, @, >)

(n0, ^@, n0, ^@, >)
(n0, @, n1, @, >)
(n1, ^G..V, n1, ^G..V, >)
(n1, G..V, r, 0..9A..F, >)

(r, [0..9A..F], e[0..9A..F], [0..9A..F], >)

(e0, [0..9A..F], e0d[0..9A..F], [G..V], >)
(e1, [0..9A..F], e1d[0..9A..F], [G..V], >)
(e2, [0..9A..F], e2d[0..9A..F], [G..V], >)
(e3, [0..9A..F], e3d[0..9A..F], [G..V], >)
(e4, [0..9A..F], e4d[0..9A..F], [G..V], >)
(e5, [0..9A..F], e5d[0..9A..F], [G..V], >)
(e6, [0..9A..F], e6d[0..9A..F], [G..V], >)
(e7, [0..9A..F], e7d[0..9A..F], [G..V], >)
(e8, [0..9A..F], e8d[0..9A..F], [G..V], >)
(e9, [0..9A..F], e9d[0..9A..F], [G..V], >)
(eA, [0..9A..F], eAd[0..9A..F], [G..V], >)
(eB, [0..9A..F], eBd[0..9A..F], [G..V], >)
(eC, [0..9A..F], eCd[0..9A..F], [G..V], >)
(eD, [0..9A..F], eDd[0..9A..F], [G..V], >)
(eE, [0..9A..F], eEd[0..9A..F], [G..V], >)
(eF, [0..9A..F], eFd[0..9A..F], [G..V], >)

# Incrementa n
(e1d[0..9A..F], ^-, e1d[0..9A..F], ^-, <)
(e1d[0..9A..F], -, e1d[0..9A..F]2, -, >)
(e1d[1..9A..F]2, 0..9A..F, e1d[0..9A..E]2, 0..9A..F, >)
(e1d02, [0..9A..F], n0, [1..9A..FF], >)

# Decrementa n
(e2d[0..9A..F], ^-, e2d[0..9A..F], ^-, <)
(e2d[0..9A..F], -, e2d[0..9A..F]2, -, >)
(e2d[1..9A..F]2, 0..9A..F, e2d[0..9A..E]2, 0..9A..F, >)
(e2d02, [0..9A..F], n0, [00..9A..E], >)

# Registro 0 = Registro n
(e3d[0..9A..F], ^-, e3d[0..9A..F], ^-, <)
(e3d[0..9A..F], -, e3d[0..9A..F]2, -, >)
(e3d[1..9A..F]2, 0..9A..F, e3d[0..9A..E]2, 0..9A..F, >)
(e3d02, [0..9A..F], e3d02[0..9A..F], [0..9A..F], <)
(e3d02[0..9A..F], ^-, e3d02[0..9A..F], ^-, <)
(e3d02[0..9A..F], -, e3d03[0..9A..F], -, >)
(e3d03[0..9A..F], ^, n0, [0..9A..F], >)

# Registro n = Registro 0
(e4d[0..9A..F], ^-, e4d[0..9A..F], ^-, <)
(e4d[0..9A..F], -, e4d[0..9A..F]2, -, >)
(e4d[1..9A..F]2, 0..9A..F, e4d[0..9A..E]2, 0..9A..F, >)
(e4d02, ^, e4d03, *, <)
(e4d03, ^-, e4d03, ^-, <)
(e4d03, -, e4d04, -, >)
(e4d04, [0..9A..F], e4d05[0..9A..F], [0..9A..F], >)
(e4d05[0..9A..F], ^*, e4d05[0..9A..F], ^*, >)
(e4d05[0..9A..F], *, n0, [0..9A..F], >)

# Registro 0 = n
(e5d[0..9A..F], ^-, e5d[0..9A..F], ^-, <)
(e5d[0..9A..F], -, e5d[0..9A..F]2, -, >)
(e5d[0..9A..F]2, ^, n0, [0..9A..F], >)

# Registro n + Registro 0
(e6d[0..9A..F], ^-, e6d[0..9A..F], ^-, <)
(e6d[0..9A..F], -, e6d[0..9A..F]2, -, >)
(e6d[1..9A..F]2, 0..9A..F, e6d[0..9A..E]2, 0..9A..F, >)
(e6d02, [0..9A..F], e6d03[0..9A..F], [0..9A..F], <)
(e6d03[0..9A..F], ^-, e6d03[0..9A..F], ^-, <)
(e6d03[0..9A..F], -, e6d04[0..9A..F], -, >)
(e6d04[1..9A..F], {0..9A..F}, e6d04[0..9A..E], {1..9A..FF}, -)
(e6d040, [0..9A..F], n0, [0..9A..F], >)

# Salta a indice n
(e7d[0..9A..F], ^, e7d[0..9A..F]#, ^, <)
(e7d[0..9A..F]#, G..V, e7d[0..9A..F]2, 0..9A..F, <)
(e7d[0..9A..F]2, ^@, e7d[0..9A..F]2, ^@, <)
(e7d[0..9A..F]2, @, e7d[0..9A..F]3, @, >)
(e7d03, ^, r, ^, -)
(e7d[1..9A..F]3, ^, e7d[1..9A..F]3#, ^, >)
(e7d[1..9A..F]3#, ^, e7d[0..9A..E]3, ^, >)

# Salta a indice registro n
(e8d[0..9A..F], ^, e8d[0..9A..F]#, ^, <)
(e8d[0..9A..F]#, G..V, e8d[0..9A..F]9, 0..9A..F, <)
(e8d[0..9A..F]9, ^-, e8d[0..9A..F]9, ^-, <)
(e8d[0..9A..F]9, -, e8d[0..9A..F]2, -, >)
(e8d[1..9A..F]2, 0..9A..F, e8d[0..9A..E]2, 0..9A..F, >)
(e8d02, [0..9A..F], e8d03[0..9A..F], [0..9A..F], >)
(e8d03[0..9A..F], ^@, e8d03[0..9A..F], ^@, >)
(e8d03[0..9A..F], @, e8d04[0..9A..F], @, >)
(e8d040, ^, r, ^, -)
(e8d04[1..9A..F], ^, e8d04[1..9A..F]#, ^, >)
(e8d04[1..9A..F]#, ^, e8d04[0..9A..E], ^, >)

#TODO
# Salta a corrente + registro n
(e9d[0..9A..F], ^-, e9d[0..9A..F], ^-, <)
(e9d[0..9A..F], -, e9d[0..9A..F]2, -, >)
(e9d[1..9A..F]2, 0..9A..F, e9d[0..9A..E]2, 0..9A..F, >)
(e9d02, [0..9A..F], e9d03[0..9A..F], [0..9A..F], >)
(e9d03[0..9A..F], ^G..V, e9d03[0..9A..F], ^G..V, >)
(e9d03[0..9A..F], G..V, e9d04[0..9A..F], 0..9A..F, >)
(e9d040, ^, r, ^, -)
(e9d04[1..9A..F], ^, e9d04[1..9A..F]#, ^, >)
(e9d04[1..9A..F]#, ^, e9d04[0..9A..E], ^, >)

# Salta a corrente - registro n
(eAd[0..9A..F], ^-, eAd[0..9A..F], ^-, <)
(eAd[0..9A..F], -, eAd[0..9A..F]2, -, >)
(eAd[1..9A..F]2, 0..9A..F, eAd[0..9A..E]2, 0..9A..F, >)
(eAd02, [0..9A..F], eAd03[0..9A..F], [0..9A..F], >)
(eAd03[0..9A..F], ^G..V, eAd03[0..9A..F], ^G..V, >)
(eAd03[0..9A..F], G..V, eAd04[0..9A..F], 0..9A..F, <)
(eAd040, ^, r, ^, -)
(eAd04[1..9A..F], ^, eAd04[1..9A..F]#, ^, <)
(eAd04[1..9A..F]#, ^, eAd04[0..9A..E], ^, <)

# check: B0
# Avanti di n istruzioni se registro 0 == 0
(eBd[0..9A..F], ^-, eBd[0..9A..F], ^-, <)
(eBd[0..9A..F], -, eBd[0..9A..F]2, -, >)
(eBd[1..9A..F]2, 0, eBd[0..9A..E]3, 0, >)
(eBd[1..9A..F]2, ^0, n0, ^0, >)

(eBd[0..9A..F]3, ^G..V, eBd[0..9A..F]3, ^G..V, >)
(eBd[0..9A..F]3, G..V, eBd[0..9A..F]4, 0..9A..F, >)
(eBd04, ^, r, ^, -)
(eBd[1..9A..F]4, ^, eBd[1..9A..F]4#, ^, >)
(eBd[1..9A..F]4#, ^, eBd[0..9A..E]4, ^, >)

# check: C0
# Avanti di n istruzioni se registro 0 != 0
(eCd[0..9A..F], ^-, eCd[0..9A..F], ^-, <)
(eCd[0..9A..F], -, eCd[0..9A..F]2, -, >)
(eCd[1..9A..F]2, ^0, eCd[0..9A..E]3, ^0, >)
(eCd[1..9A..F]2, 0, n0, 0, >)

(eCd[0..9A..F]3, ^G..V, eCd[0..9A..F]3, ^G..V, >)
(eCd[0..9A..F]3, G..V, eCd[0..9A..F]4, 0..9A..F, >)
(eCd04, ^, r, ^, -)
(eCd[1..9A..F]4, ^, eCd[1..9A..F]4#, ^, >)
(eCd[1..9A..F]4#, ^, eCd[0..9A..E]4, ^, >)

# Output valore di registro n
(eDd[0..9A..F], ^-, eDd[0..9A..F], ^-, <)
(eDd[0..9A..F], -, eDd[0..9A..F]2, -, >)
(eDd[1..9A..F]2, 0..9A..F, eDd[0..9A..E]2, 0..9A..F, >)
(eDd02, [0..9A..F], eDd03[0..9A..F], [0..9A..F], >)
(eDd03[0..9A..F], ^-, eDd03[0..9A..F], ^-, >)
(eDd03[0..9A..F], -, eDd04, [0..9A..F], <)
(eDd04, ^G..V, eDd04, ^G..V, <)
(eDd04, G..V, r, 0..9A..F, >)

# 00 termina esecuzione -> Pulisci.
(e0d0, ^-, e0d0, ^-, <)
(e0d0, -, e0d01, -, >)
(e0d01, ^*, e0d01, -, >)
(e0d01, *, -, -, -)
